plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.4'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'com.diffplug.spotless' version '6.25.0'
}

spotless {
    java {
        importOrder(
                'java',
                'javax',
                '',
                'io.swagger',
                'org.springframework',
                '',
                'buckpal'
        )
        removeUnusedImports()
        trimTrailingWhitespace()
        endWithNewline()
    }
}



group = 'buckpal'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-data-redis' // Spring 에서 제공 하는 redis client
    implementation 'org.springframework.session:spring-session-data-redis' // 스프링 에서 제공 하는 HttpSession 구현체 SpringSession
                                                                            //사실은 이 두개만 있어도 스프링 부트가 알아서 넣어 줌
    testImplementation 'junit:junit:4.13.1'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'


    //Querydsl 추가
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

tasks.named('test') {
    useJUnitPlatform()
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
    delete file('src/main/generated')
}
